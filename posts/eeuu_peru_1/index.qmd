---
title: "Digitalizaci√≥n y cultura de datos abiertos en EE.UU. y Per√∫. Una experiencia reciente"
author: "Juan Urteaga Tirado"
date: "2023-10-05"
categories: [Ciencia de Datos, Estudios Urbanos, An√°lisis Espacial]
bibliography: references.bib
lang: es
csl: apa.csl
execute:
  echo: false
  message: false
  warning: false
---

Sabemos que la realidad peruana es compleja y que una simple transferencia de aplicaciones tecnol√≥gicas de otros pa√≠ses no podr√° solucionar los problemas tan estructurales y complejos que nos aquejan, y que valorar la identidad cultural de cada pa√≠s es tambi√©n clave para un desarrollo integral. Sin embargo, no deja de ser importante poder analizar experiencias internacionales e identificar aquellos aspectos o detalles espec√≠ficos con los cuales podr√≠amos generar aportes adaptados a nuestra realidad.

Hace unas semanas atr√°s, tuve la dicha de participar de una pasant√≠a en la Universidad de Delaware, EEUU (@fig-1). Estuve aproximadamente 3 meses en EEUU (@fig-2). Es por ello que, a manera de reflexi√≥n personal y tratando de compartir, de la manera m√°s √°gil e interactiva posible, los aprendizajes obtenidos durante este periodo, decid√≠ iniciar un blog. Empecemos entonces con esta publicaci√≥n[^1] ...

[^1]: Nota: Posiblemente algunas personas acostumbradas a viajar al extranjero o que frecuentan entornos modernos, consideren algunos contenidos innecesarios, ¬°Disculpas anticipadas! La intenci√≥n es llegar tambi√©n a un p√∫blico m√°s amplio üòâ.

![Entrada del centro de investigaci√≥n en el que realic√© la pasant√≠a.](images/IMG_20230914_161937575.jpg){#fig-1 fig-align="center" width="70%"}

```{r}
#| label: fig-2
#| fig-cap:
#|   - "Los estados en azul  que est√°n al este de los EEUU, son los que pude visitar."

library(leaflet)

# From http://leafletjs.com/examples/choropleth/us-states.js
states <- geojsonio::geojson_read("https://rstudio.github.io/leaflet/json/us-states.geojson", what = "sp")

# Create a color palette for the states
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)

# Highlight the "Delaware" state with a different color
delaware_color <- "blue"
delaware_label_color <- "white"

# Create labels
labels <- sprintf(
  "<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
  states$name, states$density
) %>% lapply(htmltools::HTML)

leaflet(states) %>%
  setView(-96, 37.8, 4) %>%
  addProviderTiles("MapBox", options = providerTileOptions(
    id = "mapbox.light",
    accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')
  )) %>%
  addPolygons(
    fillColor = ~ifelse((states$name == "Delaware") | (states$name == "District of Columbia") | (states$name == "Virginia") | (states$name == "New Jersey") | (states$name == "New York"), delaware_color, "grey"), # Highlight Delaware
    weight = 2,
    opacity = 1,
    color = "white",
    dashArray = "3",
    fillOpacity = 0.7,
    highlightOptions = highlightOptions(
      weight = 5,
      color = "#666",
      dashArray = "",
      fillOpacity = 0.7,
      bringToFront = TRUE),
    label = labels,
    labelOptions = labelOptions(
      style = list("font-weight" = "normal", padding = "3px 8px", color = ~ifelse((states$name == "Delaware") | (states$name == "District of Columbia") | (states$name == "Virginia") | (states$name == "New Jersey") | (states$name == "New York"), delaware_label_color, "black")),
      textsize = "15px",
      direction = "auto")
  ) 

```

## La digitalizaci√≥n, ampliamente extendida...

Me gustar√≠a empezar compartiendo acerca del nivel de digitalizaci√≥n que observ√©, considerando que en nuestro pa√≠s y latinoam√©rica tenemos un reto importante en este aspecto. Entre tantos casos observados, podr√≠a mencionar por ejemplo: que en el condominio en el que viv√≠a (de clase media ciertamente), se usaba [una App](https://play.google.com/store/apps/details?id=com.tti.caleco&pcampaignid=web_share) para acceder a las lavadoras y secadoras de uso com√∫n, con lo cual uno solo se preocupaba por agregar el detergente y poner su ropa; por otro lado, para el uso de los buses de la universidad, uno puede seguir en tiempo real (@fig-3) sus ubicaciones [a trav√©s de la web](http://udshuttle.doublemap.com/map/mobile), lo que facilita la organizaci√≥n personal para transportarse; por √∫ltimo, para el caso de los buses de transporte p√∫blico solo se requiere usar tambi√©n [una App](https://www.dartfirststate.com/) en la que uno puede recargarse f√°cilmente el saldo, y generar un c√≥digo QR para ser le√≠do en los buses (tambi√©n puedes seguir la ubicaci√≥n de los buses en tiempo real). Ciertamente, dichos ejemplos no son de gran complejidad, por lo cual podr√≠an f√°cilmente extenderse en nuestro pa√≠s, con las adaptaciones necesarias.¬†

![Como se puede ver, a trav√©s de dicha web App, uno puede f√°cilmente saber d√≥nde se encuentra el bus de inter√©s. Registrado desde UD [-@UD2023]](images/transito.gif){#fig-3 fig-align="center" width="70%"}

## Un paso m√°s ... La cultura de datos abiertos

Otro de los aspectos que me pareci√≥ bastante interesante, fue la cultura de datos abiertos que tienen muchas ciudades y regiones all√°, lo que ciertamente facilita el desarrollo de iniciativas de programadores (de distintos niveles) y de la sociedad en su conjunto.¬†

En el caso de Delaware, hay un [portal a nivel del estado](https://data.delaware.gov/) que comparte bastante informaci√≥n. Por otro lado, hay portales a nivel pa√≠s que permiten obtener con cierta facilidad diversos datos, como los del √°mbito [censal y demogr√°fico](https://data.census.gov/). Una ciudad sobre la que me gustar√≠a comentar en m√°s profundidad es el caso de la [ciudad de Nueva York](https://opendata.cityofnewyork.us/), por la que tuve oportunidad de visitar (aunque brevemente) y que ciertamente es una de las ciudades con mayor riqueza de datos abiertos.

![La ciudad de Nueva York y algunos de sus rascacielos.](images/IMG_20230915_172932015%20-%20copia.jpg){#fig-4 fig-align="center" width="50%"}

En ese sentido, me gustar√≠a identificar algunos ejemplos de data disponible en la ciudad de Nueva York, que de poder tenerse en el Per√∫ "f√°cilmente" podr√≠an representar un aporte a aliviar las preocupaciones de nuestros compatriotas.

## Empecemos con la base de datos de llamadas de "no emergencia" (311)

En Nueva York, as√≠ como existe el conocido n√∫mero 911 frecuentemente usado para llamadas policiales, existe el 311 para llamadas de "no emergencia", en la cual los ciudadanos pueden hacer consultas o reclamos acerca del bloqueo de calles, ruido, acumulaci√≥n de basura, estacionamientos ilegales, etc. Otro detalle importante es que buena parte de estas llamadas son grabadas, as√≠ como registrados en una base de datos, parte de la cual es de acceso abierto. Esta interesante data ha sido fuente de interesantes proyectos, como el de Dubno y Argov [-@Dubno2018], en el cual me he basado para ilustrar este apartado.

### Una exploraci√≥n inicial

Considerando el top 10 de tipos de quejas en la ciudad, a trav√©s del 311 (@fig-5), se puede decir que las quejas m√°s frecuentes est√°n relacionadas al estacionamiento ilegal de veh√≠culos, y los ruidos de diversos tipos (e.g. en las calles/veredas, dentro de las viviendas, el generado por el comercio), as√≠ como tambi√©n las condiciones insalubres.

```{r}
library(dplyr)
library(tidyverse)
# library(httr)
# library(jsonlite)

# df <- read.csv("../data/311_feb.csv")
df <-read.csv("data/311_Service_Requests_from_2010_to_Present_v0.csv")

w = table(df$Complaint.Type)
t = as.data.frame(w)
names(t)[1] = 'Complaint.Type'
ct <- head(t[order(t$Freq, decreasing = TRUE),c(1,2)], 10)$Complaint.Type
df_complaints <- df[df$Complaint.Type %in% ct,]

# Select only Borough and Complaint.Type columns 
# Reorganzie the data frame and make Borough into indvidual columns.
df_select_A <- dplyr::select(df_complaints, Borough, Complaint.Type)
#df_filter <- df_select[df_select$Complaint.Type != 'DOF Literature Request', ]
#(nrow(df_filter[df_filter$Borough=='Unspecified',]) / nrow(df_filter)) * 100
```

```{r}
#| label: fig-5
#| fig-cap:
#|   - "Top 10 de tipos de quejas recibidas en el n√∫mero 311."

library(ggplot2)
#install.packages('viridis')
library(viridis)
# Select only Borough and Complaint.Type columns 
# Reorganzie the data frame and make Borough into indvidual columns.
#install.packages("extrafont")
library(extrafont)
library(plotly)
#install.packages("RColorBrewer")
library(RColorBrewer)
#font_import()

#loadfonts(device = "postscript")


df_tally <- df_select_A %>% group_by(Borough, Complaint.Type) %>% tally()
df_tally$Borough <- chartr(" ", ".", df_tally$Borough) # "Staten Island" should be "Staten.Island"

# Use a color palette from RColorBrewer
ggplot(df_tally, aes(x = factor(Complaint.Type), y = n, fill = Borough)) +
  geom_bar(stat = 'identity', position = 'dodge') +
  labs(
    title = "Quejas del 311 en la ciudad de Nueva York por barrio",
    x = "Tipo de queja",
    y = "N√∫mero de quejas"
  ) +
  scale_fill_brewer(type="qual", palette = 6, direction = 1) +  # Use a Set1 palette from RColorBrewer
  theme_bw() +
  coord_flip()


# Convert ggplot to an interactive plot using plotly
# interactive_plot <- ggplot(df_tally, aes(x = factor(Complaint.Type), y = n, fill = Borough)) +
#   geom_bar(stat = 'identity', position = 'dodge') +
#   labs(
#     title = "What Does Each Borough Complain About",
#     x = "Complaint Type",
#     y = "Number of Complaints"
#   ) +
#   scale_fill_viridis(discrete = TRUE) +
#   theme_bw() +
#   #my_theme +
#   coord_flip()
# 
# # Convert ggplot object to a plotly interactive plot
# interactive_plot <- ggplotly(interactive_plot)
# 
# # Display the interactive plot
# interactive_plot
```

```{r}
library(lubridate)
library(dplyr)
library(reshape2)
#library(ggplot2)

# Remove rows with NA values in Created.Date and Closed.Date
# df_complaints <- df_complaints[complete.cases(df_complaints$Created.Date), ]
# df_complaints <- df_complaints[complete.cases(df_complaints$Closed.Date), ]
# 
# # clean the date column
# df_complaints$Created_Date2 <- as.POSIXct(df_complaints$Created.Date, format="%m/%d/%Y %I:%M:%S %P", tz = "GMT")
# df_complaints$Closed_Date2 <- as.POSIXct(df_complaints$Closed.Date, format="%m/%d/%Y %I:%M:%S %P", tz = "GMT")

# df_complaints$Created.Date <- as.POSIXct(df_complaints$Created.Date, format="%Y-%m-%dT%H:%M:%OS")
# df_complaints$Closed.Date <- as.POSIXct(df_complaints$Closed.Date, format="%Y-%m-%dT%H:%M:%OS")

# df_complaints$Resolution.Hours <- (as.numeric(df_complaints$Closed.Date - df_complaints$Created.Date) / 60) / 60
# df_select_B <- df_complaints[,c("Borough","Complaint.Type", "Resolution.Hours")]
# df_select_B$Borough <- chartr(" ", ".", df_select_B$Borough) # "Staten Island" should be "Staten.Island"
# 
# # aggregate by the mean of resolution minutes
# df_Borough_create_time <- aggregate(x=df_select_B$Resolution.Hours,
#           by=list(df_select_B$Borough,df_select_B$Complaint.Type),
#           FUN=mean, na.rm=TRUE, na.action=NULL)
# names(df_Borough_create_time) <- c("Borough", "Complaint.Type", "resolution_mean")
# 
# 
# PLOT 2

# my_theme2 <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (25)), 
#                     plot.subtitle=element_text(family = "Helvetica", face = "bold", size = (25)),
#                     axis.text.x = element_text(angle = 0, hjust = .5),
#                     legend.title = element_text(face = "bold.italic", family = "Helvetica", size=20), 
#                     legend.text = element_text(face = "italic", family = "Helvetica", size=13), 
#                     axis.title = element_text(family = "Helvetica", size = (20)),
#                     axis.text = element_text(family = "Courier", size = (13)))

# plot
# ggplot(df_Borough_create_time, aes(x=factor(Complaint.Type), y=resolution_mean, fill=Borough)) +
#   geom_bar(stat='identity', position='dodge') +
#   labs(
#         title = "How Long Does It Take", 
#         subtitle = "For A Complaint To Get Resolved",
#         x = "Complaint Type", 
#         y = "Complaint Resolution (Hours)"
#       ) +
#   scale_fill_viridis(discrete=TRUE) + 
#   theme_bw() + 
#   my_theme2 +
#   coord_flip()
```

### La problem√°tica del ruido

Como se observ√≥ en la @fig-5, existe una importante presencia de quejas sobre ruidos en la ciudad de Nueva York. Ciertamente, Lima tambi√©n cuenta con un importante problema de contaminaci√≥n sonora. De acuerdo con la encuesta de Lima C√≥mo Vamos [@LCV2022], para el 26% de lime√±os la contaminaci√≥n ambiental es uno de los 3 problemas m√°s importantes, y para el 30% el nivel de ruido es uno de los 3 principales problemas ambientales.

```{r}
#| results: hide
library("tmap") # required version 2.0 or later
library(sf)
library(raster)
library(spatstat)

boundaries <- st_read("data/Cities_Towns.shp")
```

```{r}
#| label: fig-6
#| fig-cap:
#|   - "Quejas recibidas en el n√∫mero 311 y que est√°n relacionadas al ruido. Se puede hacer zoom,cambiar el mapa base y hacer clic en alg√∫n punto para ver una breve descripci√≥n."
nyc_boundary <- boundaries %>%
  filter(NAME == "New York")
tmap_mode("view")
#qtm(nyc_boundary)

nyc_window <- as.owin(nyc_boundary)
#No me mostr√≥ nada, solo vi que se cre√≥ la data.

df_select_C <-read.csv("data/311_Service_Requests_from_2010_to_Present_noise_tot.csv")


# Select only Borough and Complaint.Type columns 
# Reorganzie the data frame and make Borough into indvidual columns.
#df_select_C <- dplyr::select(df_select_C, Borough, Longitude, Latitude)
df_select_C$Borough <- chartr(" ", ".", df_select_C$Borough) # "Staten Island" should be "Staten.Island"

# Remove rows with missing coordinates
df_select_C_cl <- df_select_C[complete.cases(df_select_C$Longitude, df_select_C$Latitude), ]

df_select_C_cl_sf <- st_as_sf(df_select_C_cl, coords = c("Longitude", "Latitude"), crs = 4326)

#qtm(df_select_C_cl_sf)

tm_shape(df_select_C_cl_sf) + tm_dots(col="Complaint.Type", palette= "Accent", style= "cat", alpha= 0.5, popup.vars = "Descriptor") #+ tm_bubbles(col = "Descriptor")
#interesante el style, porque antes me sal√≠a 4 categor√≠as solamente, lo tomaba como continuo parece.

```

Otro punto interesante de la base de datos del 311 es que tambi√©n incluye una ubicaci√≥n georreferenciada ( @fig-6 ), con lo cual el municipio y las iniciativas ciudadanas pueden identificar m√°s sistem√°ticamente d√≥nde se podr√≠an focalizar acciones para mitigar dichos niveles de ruido. Una herramienta √∫til para guiar esta focalizaci√≥n, es el desarrollo de mapas de calor de las zonas en que se concentran dichos reclamos, como se puede ver en la @fig-7.

```{r}
#| label: fig-7
#| fig-cap:
#|   - "Mapa de calor de las zonas en las que m√°s se concentran las quejas sobre ruido. Se puede cambiar el mapa base."

# Define the CRS for New York City in feet (EPSG:2263)
# nyc_crs <- st_crs("+proj=lcc +lat_1=41.03333333333333 +lat_2=40.66666666666666 +lat_0=40.16666666666666 +lon_0=-74 +x_0=300000.0000000000 +y_0=0.0000000000 +ellps=GRS80 +datum=NAD83 +units=us-ft +no_defs")

nyc_utm_zone <- st_crs("+proj=utm +zone=18 +datum=WGS84 +units=m +no_defs")

# Transform your data to the New York City CRS
df_select_C_cl_sf_pj <- st_transform(df_select_C_cl_sf, nyc_utm_zone)

compl_ppp <- as.ppp(df_select_C_cl_sf_pj)
#PENDIENTE, es necesario que est√© proyectada la info.
#solo vi que se cre√≥ en el environment.
#entiendo que esto hace que se asegure que sea plana la cosa?
Window(compl_ppp) <- nyc_window
#no entend√≠ bien en realidad

compl_kde <- density.ppp(compl_ppp, kernel = "gaussian", sigma = 1000, adjust = 0.5, diggle = FALSE)
# el sigma se suele ajustar, parece, aunque seg√∫n la ayuda de R, es el adjust mas bien el que se ajusta. Verlo en el v√≠deo mejor.
# qu√© ser√°n los 2 √∫ltimos par√°metros?
# ¬øY c√≥mo se ajusta la resoluci√≥n? PENDIENTE
# C√≥mo considero los valores puntuales al hacer este mapa de hotspot? PENDIENTE.
#plot(danos_kde, main = "Densidad de Kernel para Viviendas Afectadas en Piura")

compl_kde_raster <- raster(compl_kde)
#solo se agreg√≥ al environment
#crs(danos_kde_raster) <- "+proj=utm +zone=17 +ellps=WGS84 +units=m +no_defs"# as√≠ estaba en el ejemplo
#crs(danos_kde_raster) <- "+proj=utm +zone=17 +south +datum=WGS84 +units=m +no_defs"
crs(compl_kde_raster) <- "+proj=utm +zone=18 +datum=WGS84 +units=m +no_defs"
# Lo llen√© seg√∫n el documento mencionado, aunque me falta entender en profundidad.
# writeRaster(compl_kde_raster,
#             filename = "data/compl_kde.tiff",
#             format = "GTiff",
#             overwrite = TRUE,
#             NAflag = -9999)
# falta explicaci√≥n
# no me sale problema.

tm_shape(compl_kde_raster) +
  tm_basemap() +
  tm_raster(palette = "RdYlGn",
            alpha = 0.7, legend.show= FALSE)
```

## Continuar√°...

Planeo continuar con el desarrollo de ejercicios similares de an√°lisis, que nos permitan explorar y enriquecernos de algunas **experiencias nacionales e internacionales** de datos abiertos y digitalizaci√≥n, abordando problemas de relevancia para nuestro pa√≠s tales como la seguridad ciudadana, la gesti√≥n del riesgo de desastre, el transporte, etc.

¬°Los veo en el siguiente art√≠culo!

## Referencias:
